# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Build and Release

on:
  push:
    tags: []

env:
  WEBCFACE_TAG: '2.4.1'
  TOOLS_TAG: '2.1.1'
  WEBUI_TAG: '1.10.0'
  RELEASE_TAG: '2.4.1-2'

jobs:
  zip-linux:
    strategy:
      matrix:
        arch: [amd64, arm64, armhf]
        include:
        - arch: amd64
          webui_arch: x64
        - arch: arm64
          webui_arch: arm64
        - arch: armhf
          webui_arch: armv7l
    runs-on: ubuntu-latest
    steps:
    - name: create webcface_${{env.RELEASE_TAG}}_linux_${{matrix.arch}}.zip
      run: |
        curl -LO https://github.com/na-trium-144/webcface/releases/download/v${WEBCFACE_TAG}/libwebcface-linux-${{matrix.arch}}.zip
        unzip libwebcface*.zip -d dist/
        curl -LO https://github.com/na-trium-144/webcface-tools/releases/download/v${TOOLS_TAG}/webcface-tools-linux-${{matrix.arch}}.zip
        unzip webcface-tools*.zip -d dist/
        curl -LO https://github.com/na-trium-144/webcface-webui/releases/download/v${WEBUI_TAG}/webcface-desktop_${WEBUI_TAG}_linux_${{matrix.webui_arch}}.tar.gz
        tar zxvf webcface-desktop*.tar.gz
        mv webcface-desktop_${WEBUI_TAG}_linux_${{matrix.webui_arch}} dist/webcface-desktop
        curl -LO https://github.com/na-trium-144/webcface-webui/releases/download/v${WEBUI_TAG}/webcface-webui_${WEBUI_TAG}.tar.gz
        mkdir -p dist/share/webcface
        cd dist/share/webcface; tar zxvf ../../../webcface-webui*.tar.gz; cd ../../..
        cd dist
        zip --symlinks -r ../webcface_${RELEASE_TAG}_linux_${{matrix.arch}}.zip *
    - uses: actions/upload-artifact@v3
      with:
        name: zip-linux-${{matrix.arch}}
        path: ${{github.workspace}}/webcface_${{env.RELEASE_TAG}}_linux_${{matrix.arch}}.zip

  zip-macos:
    runs-on: ubuntu-latest
    steps:
    - name: create webcface_${{env.RELEASE_TAG}}_macos_universal.zip
      run: |
        curl -LO https://github.com/na-trium-144/webcface/releases/download/v${WEBCFACE_TAG}/libwebcface-macos-universal.zip
        unzip libwebcface*.zip -d dist/
        curl -LO https://github.com/na-trium-144/webcface-tools/releases/download/v${TOOLS_TAG}/webcface-tools-macos-universal.zip
        unzip webcface-tools*.zip -d dist/
        curl -LO https://github.com/na-trium-144/webcface-webui/releases/download/v${WEBUI_TAG}/webcface-desktop_${WEBUI_TAG}_mac_universal.zip
        unzip webcface-desktop*.zip -d dist_app/
        curl -LO https://github.com/na-trium-144/webcface-webui/releases/download/v${WEBUI_TAG}/webcface-webui_${WEBUI_TAG}.tar.gz
        mkdir -p dist/share/webcface
        cd dist/share/webcface; tar zxvf ../../../webcface-webui*.tar.gz; cd ../../..
        cd dist
        zip --symlinks -r ../webcface_${RELEASE_TAG}_macos_universal.zip *
        cd ..
        
        cp -a dist/bin/webcface-server dist_app/webcface-desktop.app/Contents/MacOS/
        cp -a dist/bin/webcface-launcher dist_app/webcface-desktop.app/Contents/MacOS/
        cp -a dist/lib/libwebcface*.dylib dist_app/webcface-desktop.app/Contents/MacOS/
        cp -a dist/share/webcface/dist dist_app/webcface-desktop.app/Contents/
        cd dist_app
        zip --symlinks -r ../webcface-desktop_${RELEASE_TAG}_macos_app.zip *
        cd ..
        
    - uses: actions/upload-artifact@v3
      with:
        name: zip-macos
        path: ${{github.workspace}}/webcface_${{env.RELEASE_TAG}}_macos_universal.zip
    - uses: actions/upload-artifact@v3
      with:
        name: zip-macos-app
        path: ${{github.workspace}}/webcface-desktop_${{env.RELEASE_TAG}}_macos_app.zip

  zip-windows:
    strategy:
      matrix:
        arch: [x86, x64]
    runs-on: ubuntu-latest
    steps:
    - name: create webcface_${{env.RELEASE_TAG}}_windows_${{matrix.arch}}.zip
      run: |
        curl -LO https://github.com/na-trium-144/webcface/releases/download/v${WEBCFACE_TAG}/libwebcface-windows-${{matrix.arch}}.zip
        unzip libwebcface*.zip -d dist/
        curl -LO https://github.com/na-trium-144/webcface-tools/releases/download/v${TOOLS_TAG}/webcface-tools-windows-${{matrix.arch}}.zip
        unzip webcface-tools*.zip -d dist/
        curl -LO https://github.com/na-trium-144/webcface-webui/releases/download/v${WEBUI_TAG}/webcface-desktop_${WEBUI_TAG}_win_ia32.zip
        unzip webcface-desktop*.zip -d dist/webcface-desktop/
        curl -LO https://github.com/na-trium-144/webcface-webui/releases/download/v${WEBUI_TAG}/webcface-webui_${WEBUI_TAG}.tar.gz
        mkdir -p dist/share/webcface
        cd dist/share/webcface; tar zxvf ../../../webcface-webui*.tar.gz; cd ../../..
        cd dist
        zip --symlinks -r ../webcface_${RELEASE_TAG}_windows_${{matrix.arch}}.zip *
    - uses: actions/upload-artifact@v3
      with:
        name: zip-windows-${{matrix.arch}}
        path: ${{github.workspace}}/webcface_${{env.RELEASE_TAG}}_windows_${{matrix.arch}}.zip

  nsis-windows:
    strategy:
      matrix:
        arch: [x86, x64]
    needs: [zip-windows]
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v4
    - name: Install NSIS
      uses: crazy-max/ghaction-chocolatey@v3
      with:
        args: install -y nsis
    - name: Add NSIS to path
      run: echo "C:\Program Files (x86)\NSIS" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append  
    - name: Install EnVar plug-in
      run: |
        Invoke-WebRequest https://nsis.sourceforge.io/mediawiki/images/7/7f/EnVar_plugin.zip -OutFile EnVar_plugin.zip
        Expand-Archive EnVar_plugin.zip -DestinationPath "C:\Program Files (x86)\NSIS"
    - uses: actions/download-artifact@v3
      with:
        name: zip-windows-${{matrix.arch}}
        path: ${{github.workspace}}
    - run: Expand-Archive -Path webcface_${{env.RELEASE_TAG}}_windows_${{matrix.arch}}.zip -DestinationPath webcface
    - run: makensis install_${{matrix.arch}}.nsi
    - uses: actions/upload-artifact@v3
      with:
        name: nsis-windows-${{matrix.arch}}
        path: ${{github.workspace}}/webcface_${{env.RELEASE_TAG}}_windows_${{matrix.arch}}.exe

  release:
    runs-on: ubuntu-latest
    needs: [zip-linux, zip-macos, zip-windows, nsis-windows]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v3
        with:
          name: zip-linux-amd64
          path: ${{github.workspace}}/artifact
      - uses: actions/download-artifact@v3
        with:
          name: zip-linux-arm64
          path: ${{github.workspace}}/artifact
      - uses: actions/download-artifact@v3
        with:
          name: zip-linux-armhf
          path: ${{github.workspace}}/artifact
      - uses: actions/download-artifact@v3
        with:
          name: zip-macos
          path: ${{github.workspace}}/artifact
      - uses: actions/download-artifact@v3
        with:
          name: zip-macos-app
          path: ${{github.workspace}}/artifact
      - uses: actions/download-artifact@v3
        with:
          name: zip-windows-x86
          path: ${{github.workspace}}/artifact
      - uses: actions/download-artifact@v3
        with:
          name: zip-windows-x64
          path: ${{github.workspace}}/artifact
      - uses: actions/download-artifact@v3
        with:
          name: nsis-windows-x86
          path: ${{github.workspace}}/artifact
      - uses: actions/download-artifact@v3
        with:
          name: nsis-windows-x64
          path: ${{github.workspace}}/artifact
      - name: Release
        uses: docker://antonyurchenko/git-release:v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ALLOW_EMPTY_CHANGELOG: true
        with:
          args: artifact/*
